{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/server/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined;\n};\n\nexport const prisma =\n  globalForPrisma.prisma ??\n  new PrismaClient({\n    log:\n      process.env.NODE_ENV === \"development\" ? [\"query\", \"error\", \"warn\"] : [\"error\"],\n  });\n\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SACX,gBAAgB,MAAM,IACtB,IAAI,6HAAA,CAAA,eAAY,CAAC;IACf,KACE,uCAAyC;QAAC;QAAS;QAAS;KAAO;AACvE;AAEF,wCAA2C,gBAAgB,MAAM,GAAG"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/app/api/games/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { prisma } from \"~/server/db\";\r\n\r\nexport async function GET() {\r\n    try {\r\n        const games = await prisma.game.findMany({\r\n            select: {\r\n                id: true,\r\n                name: true,\r\n            },\r\n            orderBy: {\r\n                id: 'desc',\r\n            },\r\n        });\r\n\r\n        return NextResponse.json({ games });\r\n    } catch (err) {\r\n        console.error(\"Error fetching games:\", err);\r\n        if (err instanceof Error) {\r\n            return NextResponse.json(\r\n                { error: err.message },\r\n                { status: 500 }\r\n            );\r\n        }\r\n        return NextResponse.json(\r\n            { error: \"Failed to fetch games\" },\r\n            { status: 500 }\r\n        );\r\n    }\r\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe;IAClB,IAAI;QACA,MAAM,QAAQ,MAAM,qHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;YACrC,QAAQ;gBACJ,IAAI;gBACJ,MAAM;YACV;YACA,SAAS;gBACL,IAAI;YACR;QACJ;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAM;IACrC,EAAE,OAAO,KAAK;QACV,QAAQ,KAAK,CAAC,yBAAyB;QACvC,IAAI,eAAe,OAAO;YACtB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACpB;gBAAE,OAAO,IAAI,OAAO;YAAC,GACrB;gBAAE,QAAQ;YAAI;QAEtB;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACpB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAEtB;AACJ"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}