{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"~/lib/utils\";\r\n\r\nconst Card = React.forwardRef<\r\n    HTMLDivElement,\r\n    React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n    <div\r\n        ref={ref}\r\n        className={cn(\r\n            \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n            className\r\n        )}\r\n        {...props}\r\n    />\r\n));\r\nCard.displayName = \"Card\";\r\n\r\nconst CardHeader = React.forwardRef<\r\n    HTMLDivElement,\r\n    React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n    <div\r\n        ref={ref}\r\n        className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n        {...props}\r\n    />\r\n));\r\nCardHeader.displayName = \"CardHeader\";\r\n\r\nconst CardTitle = React.forwardRef<\r\n    HTMLParagraphElement,\r\n    React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n    <h3\r\n        ref={ref}\r\n        className={cn(\r\n            \"text-2xl font-semibold leading-none tracking-tight\",\r\n            className\r\n        )}\r\n        {...props}\r\n    />\r\n));\r\nCardTitle.displayName = \"CardTitle\";\r\n\r\nconst CardDescription = React.forwardRef<\r\n    HTMLParagraphElement,\r\n    React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n    <p\r\n        ref={ref}\r\n        className={cn(\"text-sm text-muted-foreground\", className)}\r\n        {...props}\r\n    />\r\n));\r\nCardDescription.displayName = \"CardDescription\";\r\n\r\nconst CardContent = React.forwardRef<\r\n    HTMLDivElement,\r\n    React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n    <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n));\r\nCardContent.displayName = \"CardContent\";\r\n\r\nconst CardFooter = React.forwardRef<\r\n    HTMLDivElement,\r\n    React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n    <div\r\n        ref={ref}\r\n        className={cn(\"flex items-center p-6 pt-0\", className)}\r\n        {...props}\r\n    />\r\n));\r\nCardFooter.displayName = \"CardFooter\";\r\n\r\nexport {\r\n    Card,\r\n    CardHeader,\r\n    CardFooter,\r\n    CardTitle,\r\n    CardDescription,\r\n    CardContent,\r\n}; "],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,4DACA;QAEH,GAAG,KAAK;;;;;;AAGjB,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGjB,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,sDACA;QAEH,GAAG,KAAK;;;;;;AAGjB,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGjB,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAElE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGjB,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,kKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { cn } from \"~/lib/utils\";\r\n\r\ninterface CheckboxProps extends React.InputHTMLAttributes<HTMLInputElement> {\r\n    checked?: boolean;\r\n    defaultChecked?: boolean;\r\n    onCheckedChange?: (checked: boolean) => void;\r\n}\r\n\r\nconst Checkbox = React.forwardRef<HTMLInputElement, CheckboxProps>(\r\n    ({ className, checked, defaultChecked, onCheckedChange, ...props }, ref) => {\r\n        return (\r\n            <input\r\n                type=\"checkbox\"\r\n                ref={ref}\r\n                checked={checked}\r\n                defaultChecked={defaultChecked}\r\n                onChange={e => onCheckedChange?.(e.target.checked)}\r\n                className={cn(\r\n                    \"h-4 w-4 shrink-0 rounded-sm border border-slate-200 bg-white ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-slate-900 data-[state=checked]:text-slate-50 dark:border-slate-800 dark:bg-slate-950 dark:ring-offset-slate-950 dark:focus-visible:ring-slate-300\",\r\n                    className\r\n                )}\r\n                {...props}\r\n            />\r\n        );\r\n    }\r\n);\r\n\r\nCheckbox.displayName = \"Checkbox\";\r\n\r\nexport { Checkbox }; "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAWA,MAAM,yBAAW,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,cAAc,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE;IAChE,qBACI,8OAAC;QACG,MAAK;QACL,KAAK;QACL,SAAS;QACT,gBAAgB;QAChB,UAAU,CAAA,IAAK,kBAAkB,EAAE,MAAM,CAAC,OAAO;QACjD,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,qZACA;QAEH,GAAG,KAAK;;;;;;AAGrB;AAGJ,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.TextareaHTMLAttributes<HTMLTextAreaElement>>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-slate-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-slate-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-slate-800 dark:bg-slate-950 dark:ring-offset-slate-950 dark:placeholder:text-slate-400 dark:focus-visible:ring-slate-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,sMAAM,UAAU,CAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qaACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/team-form.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"~/components/ui/card\";\r\nimport { Button } from \"~/components/ui/button\";\r\nimport { Input } from \"~/components/ui/input\";\r\nimport { Label } from \"~/components/ui/label\";\r\nimport { Checkbox } from \"~/components/ui/checkbox\";\r\n\r\nexport interface Player {\r\n    id: number;\r\n    name: string;\r\n    email: string;\r\n    phone: string | null;\r\n    isTeamLeader: boolean;\r\n    details: Record<string, unknown> | null;\r\n}\r\n\r\ninterface TeamFormProps {\r\n    defaultValues?: {\r\n        name: string;\r\n        players: Player[];\r\n    };\r\n    onSubmit: (data: { name: string; players: Player[] }) => Promise<void>;\r\n    submitLabel?: string;\r\n    isSubmitting?: boolean;\r\n}\r\n\r\nexport function TeamForm({ defaultValues, onSubmit, submitLabel = \"Save Changes\", isSubmitting = false }: TeamFormProps) {\r\n    const [players, setPlayers] = useState<Player[]>(defaultValues?.players ?? [{\r\n        id: 1,\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: null,\r\n        isTeamLeader: true,\r\n        details: null,\r\n    }]);\r\n\r\n    return (\r\n        <form\r\n            onSubmit={async (e) => {\r\n                e.preventDefault();\r\n                const formData = new FormData(e.currentTarget);\r\n                const teamName = formData.get('teamName') as string;\r\n\r\n                if (!teamName) {\r\n                    throw new Error('Team name is required');\r\n                }\r\n\r\n                await onSubmit({\r\n                    name: teamName,\r\n                    players,\r\n                });\r\n            }}\r\n            className=\"space-y-6\"\r\n        >\r\n            <Card className=\"border-slate-800 bg-slate-900/50\">\r\n                <CardHeader>\r\n                    <CardTitle>Team Details</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-6\">\r\n                    <div className=\"space-y-2\">\r\n                        <Label htmlFor=\"teamName\">Team Name</Label>\r\n                        <Input\r\n                            id=\"teamName\"\r\n                            name=\"teamName\"\r\n                            defaultValue={defaultValues?.name}\r\n                            required\r\n                            className=\"bg-slate-950\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"space-y-4\">\r\n                        <Label>Players</Label>\r\n                        <div className=\"space-y-4\">\r\n                            {players.map((player, index) => (\r\n                                <div key={player.id} className=\"p-4 rounded-lg border border-slate-800 bg-slate-900/50\">\r\n                                    <div className=\"flex flex-wrap items-center gap-4\">\r\n                                        <div className=\"flex-1 min-w-[200px]\">\r\n                                            <Label htmlFor={`player-${index}-name`} className=\"sr-only\">Name</Label>\r\n                                            <Input\r\n                                                id={`player-${index}-name`}\r\n                                                value={player.name}\r\n                                                onChange={(e) => {\r\n                                                    const newPlayers = [...players];\r\n                                                    if (newPlayers[index]) {\r\n                                                        newPlayers[index].name = e.target.value;\r\n                                                        setPlayers(newPlayers);\r\n                                                    }\r\n                                                }}\r\n                                                placeholder=\"Player name\"\r\n                                                required\r\n                                                className=\"bg-slate-950\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"flex-1 min-w-[200px]\">\r\n                                            <Label htmlFor={`player-${index}-email`} className=\"sr-only\">Email</Label>\r\n                                            <Input\r\n                                                id={`player-${index}-email`}\r\n                                                type=\"email\"\r\n                                                value={player.email}\r\n                                                onChange={(e) => {\r\n                                                    const newPlayers = [...players];\r\n                                                    if (newPlayers[index]) {\r\n                                                        newPlayers[index].email = e.target.value;\r\n                                                        setPlayers(newPlayers);\r\n                                                    }\r\n                                                }}\r\n                                                placeholder=\"Email\"\r\n                                                required\r\n                                                className=\"bg-slate-950\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"flex-1 min-w-[200px]\">\r\n                                            <Label htmlFor={`player-${index}-phone`} className=\"sr-only\">Phone</Label>\r\n                                            <Input\r\n                                                id={`player-${index}-phone`}\r\n                                                type=\"tel\"\r\n                                                value={player.phone ?? \"\"}\r\n                                                onChange={(e) => {\r\n                                                    const newPlayers = [...players];\r\n                                                    if (newPlayers[index]) {\r\n                                                        newPlayers[index].phone = e.target.value || null;\r\n                                                        setPlayers(newPlayers);\r\n                                                    }\r\n                                                }}\r\n                                                placeholder=\"Phone\"\r\n                                                className=\"bg-slate-950\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"flex items-center space-x-2\">\r\n                                            <Checkbox\r\n                                                id={`player-${index}-leader`}\r\n                                                checked={player.isTeamLeader}\r\n                                                onCheckedChange={(checked) => {\r\n                                                    const newPlayers = [...players];\r\n                                                    if (newPlayers[index]) {\r\n                                                        newPlayers[index].isTeamLeader = checked === true;\r\n                                                        setPlayers(newPlayers);\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                            <Label\r\n                                                htmlFor={`player-${index}-leader`}\r\n                                                className=\"font-normal whitespace-nowrap\"\r\n                                            >\r\n                                                Is team leader\r\n                                            </Label>\r\n                                        </div>\r\n                                        {players.length > 1 && (\r\n                                            <Button\r\n                                                type=\"button\"\r\n                                                variant=\"destructive\"\r\n                                                onClick={() => {\r\n                                                    setPlayers(players.filter((_, i) => i !== index));\r\n                                                }}\r\n                                                className=\"h-8\"\r\n                                            >\r\n                                                Delete\r\n                                            </Button>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                            <Button\r\n                                type=\"button\"\r\n                                variant=\"outline\"\r\n                                onClick={() => {\r\n                                    setPlayers([\r\n                                        ...players,\r\n                                        {\r\n                                            id: Math.random(),\r\n                                            name: \"\",\r\n                                            email: \"\",\r\n                                            phone: null,\r\n                                            isTeamLeader: false,\r\n                                            details: null,\r\n                                        }\r\n                                    ]);\r\n                                }}\r\n                                className=\"w-full\"\r\n                            >\r\n                                Add Player\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-end\">\r\n                        <Button type=\"submit\" disabled={isSubmitting}>\r\n                            {isSubmitting ? \"Saving...\" : submitLabel}\r\n                        </Button>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </form>\r\n    );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 621, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 627, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"~/lib/utils\"\r\n\r\nconst Tabs = TabsPrimitive.Root\r\n\r\nconst TabsList = React.forwardRef<\r\n    React.ElementRef<typeof TabsPrimitive.List>,\r\n    React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n    <TabsPrimitive.List\r\n        ref={ref}\r\n        className={cn(\r\n            \"inline-flex h-10 items-center justify-center rounded-md bg-slate-900/50 p-1 text-slate-400\",\r\n            className\r\n        )}\r\n        {...props}\r\n    />\r\n))\r\nTabsList.displayName = TabsPrimitive.List.displayName\r\n\r\nconst TabsTrigger = React.forwardRef<\r\n    React.ElementRef<typeof TabsPrimitive.Trigger>,\r\n    React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\r\n>(({ className, ...props }, ref) => (\r\n    <TabsPrimitive.Trigger\r\n        ref={ref}\r\n        className={cn(\r\n            \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-white transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-slate-800 data-[state=active]:text-slate-50 data-[state=active]:shadow-sm\",\r\n            className\r\n        )}\r\n        {...props}\r\n    />\r\n))\r\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\r\n\r\nconst TabsContent = React.forwardRef<\r\n    React.ElementRef<typeof TabsPrimitive.Content>,\r\n    React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n    <TabsPrimitive.Content\r\n        ref={ref}\r\n        className={cn(\r\n            \"mt-2 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-400 focus-visible:ring-offset-2\",\r\n            className\r\n        )}\r\n        {...props}\r\n    />\r\n))\r\nTabsContent.displayName = TabsPrimitive.Content.displayName\r\n\r\nexport {\r\n    Tabs,\r\n    TabsList,\r\n    TabsTrigger,\r\n    TabsContent,\r\n} "],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,OAAO,iKAAc,IAAI;AAE/B,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC,iKAAc,IAAI;QACf,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,8FACA;QAEH,GAAG,KAAK;;;;;;AAGjB,SAAS,WAAW,GAAG,iKAAc,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC,iKAAc,OAAO;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,oYACA;QAEH,GAAG,KAAK;;;;;;AAGjB,YAAY,WAAW,GAAG,iKAAc,OAAO,CAAC,WAAW;AAE3D,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC,iKAAc,OAAO;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,mIACA;QAEH,GAAG,KAAK;;;;;;AAGjB,YAAY,WAAW,GAAG,iKAAc,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/app/admin/bookings/new/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"~/components/ui/card\";\r\nimport { Button } from \"~/components/ui/button\";\r\nimport { Input } from \"~/components/ui/input\";\r\nimport { Label } from \"~/components/ui/label\";\r\nimport { Checkbox } from \"~/components/ui/checkbox\";\r\nimport { Textarea } from \"~/components/ui/textarea\";\r\nimport { useToast } from \"~/hooks/use-toast\";\r\nimport { TeamForm, type Player } from \"~/components/team-form\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"~/components/ui/tabs\";\r\n\r\ninterface Game {\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\ninterface Team {\r\n    id: number;\r\n    name: string;\r\n    players: Player[];\r\n}\r\n\r\ninterface TeamResponse {\r\n    team: {\r\n        id: number;\r\n    };\r\n}\r\n\r\ninterface TeamsResponse {\r\n    teams: Team[];\r\n}\r\n\r\ninterface BookingResponse {\r\n    booking: {\r\n        code: string;\r\n    };\r\n}\r\n\r\ninterface GamesResponse {\r\n    games: Game[];\r\n}\r\n\r\ninterface ErrorResponse {\r\n    error: string;\r\n}\r\n\r\ninterface BookingDetails {\r\n    gameId: number;\r\n    startTime: string | null;\r\n    expiresAt: string | null;\r\n    voucher: string | null;\r\n    paid: boolean;\r\n    notes: string | null;\r\n}\r\n\r\ntype Step = 'booking' | 'team';\r\n\r\nexport default function NewBookingPage() {\r\n    const [games, setGames] = useState<Game[]>([]);\r\n    const [teams, setTeams] = useState<Team[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [step, setStep] = useState<Step>('booking');\r\n    const [bookingDetails, setBookingDetails] = useState<BookingDetails | null>(null);\r\n    const { toast } = useToast();\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const [gamesResponse, teamsResponse] = await Promise.all([\r\n                    fetch('/api/games'),\r\n                    fetch('/api/teams')\r\n                ]);\r\n\r\n                if (!gamesResponse.ok) throw new Error('Failed to fetch games');\r\n                if (!teamsResponse.ok) throw new Error('Failed to fetch teams');\r\n\r\n                const gamesData = await gamesResponse.json() as GamesResponse;\r\n                const teamsData = await teamsResponse.json() as TeamsResponse;\r\n\r\n                setGames(gamesData.games);\r\n                setTeams(teamsData.teams);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n                toast({\r\n                    variant: \"destructive\",\r\n                    title: \"Error\",\r\n                    description: \"Failed to load data\",\r\n                });\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        void fetchData();\r\n    }, [toast]);\r\n\r\n    async function createBookingWithTeam(teamId: number) {\r\n        if (!bookingDetails) return;\r\n\r\n        try {\r\n            setSubmitting(true);\r\n            const bookingResponse = await fetch('/api/bookings', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    teamId,\r\n                    gameId: bookingDetails.gameId,\r\n                    startTime: bookingDetails.startTime ? new Date(bookingDetails.startTime).toISOString() : undefined,\r\n                    expiresAt: bookingDetails.expiresAt ? new Date(bookingDetails.expiresAt).toISOString() : undefined,\r\n                    voucher: bookingDetails.voucher ?? undefined,\r\n                    paid: bookingDetails.paid,\r\n                    notes: bookingDetails.notes ?? undefined,\r\n                }),\r\n            });\r\n\r\n            if (!bookingResponse.ok) {\r\n                const errorData = await bookingResponse.json() as ErrorResponse;\r\n                throw new Error(errorData.error ?? 'Failed to create booking');\r\n            }\r\n\r\n            const bookingData = await bookingResponse.json() as BookingResponse;\r\n\r\n            toast({\r\n                title: \"Success\",\r\n                description: `Booking created! Code: ${bookingData.booking.code}`,\r\n            });\r\n\r\n            router.push('/admin/bookings');\r\n        } catch (error) {\r\n            console.error('Error creating booking:', error);\r\n            toast({\r\n                variant: \"destructive\",\r\n                title: \"Error\",\r\n                description: error instanceof Error ? error.message : \"Failed to create booking\",\r\n            });\r\n        } finally {\r\n            setSubmitting(false);\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-8\">\r\n            <div className=\"mb-8\">\r\n                <h1 className=\"text-3xl font-bold tracking-tight\">New Booking</h1>\r\n                <p className=\"text-slate-400\">Create a new booking and team.</p>\r\n            </div>\r\n\r\n            {step === 'booking' ? (\r\n                <form\r\n                    onSubmit={async (e) => {\r\n                        e.preventDefault();\r\n                        const formData = new FormData(e.currentTarget);\r\n                        const gameId = formData.get('gameId') as string | null;\r\n                        const startTime = formData.get('startTime') as string | null;\r\n                        const expiresAt = formData.get('expiresAt') as string | null;\r\n                        const voucher = formData.get('voucher') as string | null;\r\n                        const notes = formData.get('notes') as string | null;\r\n                        const paid = formData.get('paid') as string | null;\r\n\r\n                        if (!gameId) {\r\n                            toast({\r\n                                variant: \"destructive\",\r\n                                title: \"Error\",\r\n                                description: \"Please select a game\",\r\n                            });\r\n                            return;\r\n                        }\r\n\r\n                        setBookingDetails({\r\n                            gameId: Number(gameId),\r\n                            startTime: startTime ?? null,\r\n                            expiresAt: expiresAt ?? null,\r\n                            voucher: voucher ?? null,\r\n                            paid: paid === 'on',\r\n                            notes: notes ?? null,\r\n                        });\r\n\r\n                        setStep('team');\r\n                    }}\r\n                    className=\"space-y-8\"\r\n                >\r\n                    <Card className=\"border-slate-800 bg-slate-900/50\">\r\n                        <CardHeader>\r\n                            <CardTitle>Booking Details</CardTitle>\r\n                        </CardHeader>\r\n                        <CardContent className=\"space-y-6\">\r\n                            <div className=\"space-y-2\">\r\n                                <Label htmlFor=\"gameId\">Game</Label>\r\n                                <select\r\n                                    id=\"gameId\"\r\n                                    name=\"gameId\"\r\n                                    required\r\n                                    className=\"w-full rounded-md border border-slate-800 bg-slate-950 px-3 py-2\"\r\n                                >\r\n                                    <option value=\"\">Select a game</option>\r\n                                    {games.map((game) => (\r\n                                        <option key={game.id} value={game.id}>\r\n                                            {game.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"space-y-2\">\r\n                                <Label htmlFor=\"startTime\">Start Time</Label>\r\n                                <Input\r\n                                    id=\"startTime\"\r\n                                    name=\"startTime\"\r\n                                    type=\"datetime-local\"\r\n                                    className=\"bg-slate-950\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"space-y-2\">\r\n                                <Label htmlFor=\"expiresAt\">Expires At</Label>\r\n                                <Input\r\n                                    id=\"expiresAt\"\r\n                                    name=\"expiresAt\"\r\n                                    type=\"datetime-local\"\r\n                                    className=\"bg-slate-950\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"space-y-2\">\r\n                                <Label htmlFor=\"voucher\">Voucher Code</Label>\r\n                                <Input\r\n                                    id=\"voucher\"\r\n                                    name=\"voucher\"\r\n                                    className=\"bg-slate-950\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <Checkbox\r\n                                    id=\"paid\"\r\n                                    name=\"paid\"\r\n                                />\r\n                                <Label\r\n                                    htmlFor=\"paid\"\r\n                                    className=\"font-normal\"\r\n                                >\r\n                                    Paid\r\n                                </Label>\r\n                            </div>\r\n\r\n                            <div className=\"space-y-2\">\r\n                                <Label htmlFor=\"notes\">Notes</Label>\r\n                                <Textarea\r\n                                    id=\"notes\"\r\n                                    name=\"notes\"\r\n                                    className=\"bg-slate-950\"\r\n                                />\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <div className=\"flex justify-end gap-4\">\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant=\"outline\"\r\n                            onClick={() => router.back()}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\">\r\n                            Continue to Team Selection\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            ) : (\r\n                <Tabs defaultValue=\"new\" className=\"space-y-6\">\r\n                    <TabsList className=\"grid w-full grid-cols-2\">\r\n                        <TabsTrigger value=\"new\">Create New Team</TabsTrigger>\r\n                        <TabsTrigger value=\"existing\">Select Existing Team</TabsTrigger>\r\n                    </TabsList>\r\n                    <TabsContent value=\"new\">\r\n                        <TeamForm\r\n                            onSubmit={async (data) => {\r\n                                setSubmitting(true);\r\n                                try {\r\n                                    const teamResponse = await fetch('/api/teams', {\r\n                                        method: 'POST',\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json',\r\n                                        },\r\n                                        body: JSON.stringify(data),\r\n                                    });\r\n\r\n                                    if (!teamResponse.ok) {\r\n                                        const errorData = await teamResponse.json() as ErrorResponse;\r\n                                        throw new Error(errorData.error ?? 'Failed to create team');\r\n                                    }\r\n\r\n                                    const teamResult = await teamResponse.json() as TeamResponse;\r\n                                    await createBookingWithTeam(teamResult.team.id);\r\n                                } catch (error) {\r\n                                    console.error('Error creating team:', error);\r\n                                    toast({\r\n                                        variant: \"destructive\",\r\n                                        title: \"Error\",\r\n                                        description: error instanceof Error ? error.message : \"Failed to create team\",\r\n                                    });\r\n                                    setSubmitting(false);\r\n                                }\r\n                            }}\r\n                            submitLabel=\"Create Team & Booking\"\r\n                            isSubmitting={submitting}\r\n                        />\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant=\"outline\"\r\n                            onClick={() => setStep('booking')}\r\n                            className=\"mt-4\"\r\n                        >\r\n                            Back to Booking\r\n                        </Button>\r\n                    </TabsContent>\r\n                    <TabsContent value=\"existing\" className=\"space-y-4\">\r\n                        <Card className=\"border-slate-800 bg-slate-900/50\">\r\n                            <CardHeader>\r\n                                <CardTitle>Select Team</CardTitle>\r\n                            </CardHeader>\r\n                            <CardContent className=\"space-y-6\">\r\n                                <div className=\"space-y-4\">\r\n                                    {teams.map((team) => (\r\n                                        <div\r\n                                            key={team.id}\r\n                                            className=\"flex items-center justify-between p-4 rounded-lg border border-slate-800 bg-slate-900/50\"\r\n                                        >\r\n                                            <div>\r\n                                                <h3 className=\"font-medium\">{team.name}</h3>\r\n                                                <p className=\"text-sm text-slate-400\">\r\n                                                    {team.players.length} players\r\n                                                </p>\r\n                                            </div>\r\n                                            <Button\r\n                                                onClick={() => createBookingWithTeam(team.id)}\r\n                                                disabled={submitting}\r\n                                            >\r\n                                                {submitting ? \"Creating...\" : \"Select & Create Booking\"}\r\n                                            </Button>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant=\"outline\"\r\n                            onClick={() => setStep('booking')}\r\n                            className=\"mt-4\"\r\n                        >\r\n                            Back to Booking\r\n                        </Button>\r\n                    </TabsContent>\r\n                </Tabs>\r\n            )}\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}