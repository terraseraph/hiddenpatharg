{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/server/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: PrismaClient | undefined;\n};\n\nexport const prisma =\n  globalForPrisma.prisma ??\n  new PrismaClient({\n    log:\n      process.env.NODE_ENV === \"development\" ? [\"query\", \"error\", \"warn\"] : [\"error\"],\n  });\n\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SACX,gBAAgB,MAAM,IACtB,IAAI,6HAAA,CAAA,eAAY,CAAC;IACf,KACE,uCAAyC;QAAC;QAAS;QAAS;KAAO;AACvE;AAEF,wCAA2C,gBAAgB,MAAM,GAAG"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/app/admin/page.tsx"],"sourcesContent":["import { prisma } from \"~/server/db\";\r\n\r\nexport default async function AdminDashboard() {\r\n    const [gamesCount, teamsCount, usersCount] = await Promise.all([\r\n        prisma.game.count(),\r\n        prisma.team.count(),\r\n        prisma.user.count(),\r\n    ]);\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-3xl font-bold mb-8\">Dashboard</h1>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <h2 className=\"text-xl font-semibold mb-2\">Total Games</h2>\r\n                    <p className=\"text-4xl font-bold text-blue-600\">{gamesCount}</p>\r\n                </div>\r\n\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <h2 className=\"text-xl font-semibold mb-2\">Active Teams</h2>\r\n                    <p className=\"text-4xl font-bold text-green-600\">{teamsCount}</p>\r\n                </div>\r\n\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <h2 className=\"text-xl font-semibold mb-2\">Total Players</h2>\r\n                    <p className=\"text-4xl font-bold text-purple-600\">{usersCount}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":";;;;AAAA;;;AAEe,eAAe;IAC1B,MAAM,CAAC,YAAY,YAAY,WAAW,GAAG,MAAM,QAAQ,GAAG,CAAC;QAC3D,mHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,KAAK;QACjB,mHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,KAAK;QACjB,mHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,KAAK;KACpB;IAED,qBACI,8OAAC;;0BACG,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BAExC,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAG,WAAU;0CAA6B;;;;;;0CAC3C,8OAAC;gCAAE,WAAU;0CAAoC;;;;;;;;;;;;kCAGrD,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAG,WAAU;0CAA6B;;;;;;0CAC3C,8OAAC;gCAAE,WAAU;0CAAqC;;;;;;;;;;;;kCAGtD,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAG,WAAU;0CAA6B;;;;;;0CAC3C,8OAAC;gCAAE,WAAU;0CAAsC;;;;;;;;;;;;;;;;;;;;;;;;AAKvE"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAR9B,SAASE,IAAI,EAAEC,KAAK,GAAE;AAjBtB,SAASH,kBAAkB,QAAQ,2DAA2D;AAAqC,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAcd,OAAO,MAAMM,eAAe;AAG5B,EAAC;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA,GAAU;gBAAA,UAAA;oBAAA,IAAA;oBAAA;iBAAA;;eACVC,UAAU,EAAE;;KACd;UACAC,QAAAA;YAAAA,CAAU,GAAA;YAAA;SAAA;cACRC,OAAAA;YAAAA,IAAYnB;YAAAA;SAAAA;UACd,WAAA;YAAA,IAAA;YAAA;SAAA;QACF,CAAE,eAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0]}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}