{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"~/lib/utils\";\r\n\r\nconst Card = React.forwardRef<\r\n    HTMLDivElement,\r\n    React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n    <div\r\n        ref={ref}\r\n        className={cn(\r\n            \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n            className\r\n        )}\r\n        {...props}\r\n    />\r\n));\r\nCard.displayName = \"Card\";\r\n\r\nconst CardHeader = React.forwardRef<\r\n    HTMLDivElement,\r\n    React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n    <div\r\n        ref={ref}\r\n        className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n        {...props}\r\n    />\r\n));\r\nCardHeader.displayName = \"CardHeader\";\r\n\r\nconst CardTitle = React.forwardRef<\r\n    HTMLParagraphElement,\r\n    React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n    <h3\r\n        ref={ref}\r\n        className={cn(\r\n            \"text-2xl font-semibold leading-none tracking-tight\",\r\n            className\r\n        )}\r\n        {...props}\r\n    />\r\n));\r\nCardTitle.displayName = \"CardTitle\";\r\n\r\nconst CardDescription = React.forwardRef<\r\n    HTMLParagraphElement,\r\n    React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n    <p\r\n        ref={ref}\r\n        className={cn(\"text-sm text-muted-foreground\", className)}\r\n        {...props}\r\n    />\r\n));\r\nCardDescription.displayName = \"CardDescription\";\r\n\r\nconst CardContent = React.forwardRef<\r\n    HTMLDivElement,\r\n    React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n    <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n));\r\nCardContent.displayName = \"CardContent\";\r\n\r\nconst CardFooter = React.forwardRef<\r\n    HTMLDivElement,\r\n    React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n    <div\r\n        ref={ref}\r\n        className={cn(\"flex items-center p-6 pt-0\", className)}\r\n        {...props}\r\n    />\r\n));\r\nCardFooter.displayName = \"CardFooter\";\r\n\r\nexport {\r\n    Card,\r\n    CardHeader,\r\n    CardFooter,\r\n    CardTitle,\r\n    CardDescription,\r\n    CardContent,\r\n}; "],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACR,4DACA;QAEH,GAAG,KAAK;;;;;;;AAGjB,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGjB,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACR,sDACA;QAEH,GAAG,KAAK;;;;;;;AAGjB,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGjB,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAElE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGjB,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,8JAAM,UAAU,MAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,qKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { cn } from \"~/lib/utils\";\r\n\r\ninterface CheckboxProps extends React.InputHTMLAttributes<HTMLInputElement> {\r\n    checked?: boolean;\r\n    defaultChecked?: boolean;\r\n    onCheckedChange?: (checked: boolean) => void;\r\n}\r\n\r\nconst Checkbox = React.forwardRef<HTMLInputElement, CheckboxProps>(\r\n    ({ className, checked, defaultChecked, onCheckedChange, ...props }, ref) => {\r\n        return (\r\n            <input\r\n                type=\"checkbox\"\r\n                ref={ref}\r\n                checked={checked}\r\n                defaultChecked={defaultChecked}\r\n                onChange={e => onCheckedChange?.(e.target.checked)}\r\n                className={cn(\r\n                    \"h-4 w-4 shrink-0 rounded-sm border border-slate-200 bg-white ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-slate-900 data-[state=checked]:text-slate-50 dark:border-slate-800 dark:bg-slate-950 dark:ring-offset-slate-950 dark:focus-visible:ring-slate-300\",\r\n                    className\r\n                )}\r\n                {...props}\r\n            />\r\n        );\r\n    }\r\n);\r\n\r\nCheckbox.displayName = \"Checkbox\";\r\n\r\nexport { Checkbox }; "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAWA,MAAM,yBAAW,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,cAAc,EAAE,eAAe,EAAE,GAAG,OAAO,EAAE;IAChE,qBACI,6LAAC;QACG,MAAK;QACL,KAAK;QACL,SAAS;QACT,gBAAgB;QAChB,UAAU,CAAA,IAAK,kBAAkB,EAAE,MAAM,CAAC,OAAO;QACjD,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACR,qZACA;QAEH,GAAG,KAAK;;;;;;AAGrB;;AAGJ,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.TextareaHTMLAttributes<HTMLTextAreaElement>>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-slate-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-slate-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-slate-800 dark:bg-slate-950 dark:ring-offset-slate-950 dark:placeholder:text-slate-400 dark:focus-visible:ring-slate-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,8JAAM,UAAU,MAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qaACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/team-form.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"~/components/ui/card\";\r\nimport { Button } from \"~/components/ui/button\";\r\nimport { Input } from \"~/components/ui/input\";\r\nimport { Label } from \"~/components/ui/label\";\r\nimport { Checkbox } from \"~/components/ui/checkbox\";\r\n\r\nexport interface Player {\r\n    id: number;\r\n    name: string;\r\n    email: string;\r\n    phone: string | null;\r\n    isTeamLeader: boolean;\r\n}\r\n\r\ninterface TeamFormProps {\r\n    defaultValues?: {\r\n        name: string;\r\n        players: Player[];\r\n    };\r\n    onSubmit: (data: { name: string; players: Player[] }) => Promise<void>;\r\n    submitLabel?: string;\r\n    isSubmitting?: boolean;\r\n}\r\n\r\nexport function TeamForm({ defaultValues, onSubmit, submitLabel = \"Save Changes\", isSubmitting = false }: TeamFormProps) {\r\n    const [players, setPlayers] = useState<Player[]>(defaultValues?.players ?? [{\r\n        id: 1,\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: null,\r\n        isTeamLeader: true,\r\n    }]);\r\n\r\n    return (\r\n        <form\r\n            onSubmit={async (e) => {\r\n                e.preventDefault();\r\n                const formData = new FormData(e.currentTarget);\r\n                const teamName = formData.get('teamName') as string;\r\n\r\n                if (!teamName) {\r\n                    throw new Error('Team name is required');\r\n                }\r\n\r\n                await onSubmit({\r\n                    name: teamName,\r\n                    players,\r\n                });\r\n            }}\r\n            className=\"space-y-6\"\r\n        >\r\n            <Card className=\"border-slate-800 bg-slate-900/50\">\r\n                <CardHeader>\r\n                    <CardTitle>Team Details</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-6\">\r\n                    <div className=\"space-y-2\">\r\n                        <Label htmlFor=\"teamName\">Team Name</Label>\r\n                        <Input\r\n                            id=\"teamName\"\r\n                            name=\"teamName\"\r\n                            defaultValue={defaultValues?.name}\r\n                            required\r\n                            className=\"bg-slate-950\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"space-y-4\">\r\n                        <Label>Players</Label>\r\n                        <div className=\"space-y-4\">\r\n                            {players.map((player, index) => (\r\n                                <div key={player.id} className=\"p-4 rounded-lg border border-slate-800 bg-slate-900/50\">\r\n                                    <div className=\"flex flex-wrap items-center gap-4\">\r\n                                        <div className=\"flex-1 min-w-[200px]\">\r\n                                            <Label htmlFor={`player-${index}-name`} className=\"sr-only\">Name</Label>\r\n                                            <Input\r\n                                                id={`player-${index}-name`}\r\n                                                value={player.name}\r\n                                                onChange={(e) => {\r\n                                                    const newPlayers = [...players];\r\n                                                    if (newPlayers[index]) {\r\n                                                        newPlayers[index].name = e.target.value;\r\n                                                        setPlayers(newPlayers);\r\n                                                    }\r\n                                                }}\r\n                                                placeholder=\"Player name\"\r\n                                                required\r\n                                                className=\"bg-slate-950\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"flex-1 min-w-[200px]\">\r\n                                            <Label htmlFor={`player-${index}-email`} className=\"sr-only\">Email</Label>\r\n                                            <Input\r\n                                                id={`player-${index}-email`}\r\n                                                type=\"email\"\r\n                                                value={player.email}\r\n                                                onChange={(e) => {\r\n                                                    const newPlayers = [...players];\r\n                                                    if (newPlayers[index]) {\r\n                                                        newPlayers[index].email = e.target.value;\r\n                                                        setPlayers(newPlayers);\r\n                                                    }\r\n                                                }}\r\n                                                placeholder=\"Email\"\r\n                                                required\r\n                                                className=\"bg-slate-950\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"flex-1 min-w-[200px]\">\r\n                                            <Label htmlFor={`player-${index}-phone`} className=\"sr-only\">Phone</Label>\r\n                                            <Input\r\n                                                id={`player-${index}-phone`}\r\n                                                type=\"tel\"\r\n                                                value={player.phone ?? \"\"}\r\n                                                onChange={(e) => {\r\n                                                    const newPlayers = [...players];\r\n                                                    if (newPlayers[index]) {\r\n                                                        newPlayers[index].phone = e.target.value || null;\r\n                                                        setPlayers(newPlayers);\r\n                                                    }\r\n                                                }}\r\n                                                placeholder=\"Phone\"\r\n                                                className=\"bg-slate-950\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"flex items-center space-x-2\">\r\n                                            <Checkbox\r\n                                                id={`player-${index}-leader`}\r\n                                                checked={player.isTeamLeader}\r\n                                                onCheckedChange={(checked) => {\r\n                                                    const newPlayers = [...players];\r\n                                                    if (newPlayers[index]) {\r\n                                                        newPlayers[index].isTeamLeader = checked === true;\r\n                                                        setPlayers(newPlayers);\r\n                                                    }\r\n                                                }}\r\n                                            />\r\n                                            <Label\r\n                                                htmlFor={`player-${index}-leader`}\r\n                                                className=\"font-normal whitespace-nowrap\"\r\n                                            >\r\n                                                Is team leader\r\n                                            </Label>\r\n                                        </div>\r\n                                        {players.length > 1 && (\r\n                                            <Button\r\n                                                type=\"button\"\r\n                                                variant=\"destructive\"\r\n                                                onClick={() => {\r\n                                                    setPlayers(players.filter((_, i) => i !== index));\r\n                                                }}\r\n                                                className=\"h-8\"\r\n                                            >\r\n                                                Delete\r\n                                            </Button>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                            <Button\r\n                                type=\"button\"\r\n                                variant=\"outline\"\r\n                                onClick={() => {\r\n                                    setPlayers([\r\n                                        ...players,\r\n                                        {\r\n                                            id: Math.random(),\r\n                                            name: \"\",\r\n                                            email: \"\",\r\n                                            phone: null,\r\n                                            isTeamLeader: false,\r\n                                        }\r\n                                    ]);\r\n                                }}\r\n                                className=\"w-full\"\r\n                            >\r\n                                Add Player\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-end\">\r\n                        <Button type=\"submit\" disabled={isSubmitting}>\r\n                            {isSubmitting ? \"Saving...\" : submitLabel}\r\n                        </Button>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </form>\r\n    );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 685, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 691, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/app/admin/bookings/new/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"~/components/ui/card\";\r\nimport { Button } from \"~/components/ui/button\";\r\nimport { Input } from \"~/components/ui/input\";\r\nimport { Label } from \"~/components/ui/label\";\r\nimport { Checkbox } from \"~/components/ui/checkbox\";\r\nimport { Textarea } from \"~/components/ui/textarea\";\r\nimport { useToast } from \"~/hooks/use-toast\";\r\nimport { TeamForm, type Player } from \"~/components/team-form\";\r\n\r\ninterface Game {\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\ninterface TeamResponse {\r\n    team: {\r\n        id: number;\r\n    };\r\n}\r\n\r\ninterface BookingResponse {\r\n    booking: {\r\n        code: string;\r\n    };\r\n}\r\n\r\ninterface GamesResponse {\r\n    games: Game[];\r\n}\r\n\r\ninterface ErrorResponse {\r\n    error: string;\r\n}\r\n\r\ntype Step = 'team' | 'booking';\r\n\r\nexport default function NewBookingPage() {\r\n    const [games, setGames] = useState<Game[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [step, setStep] = useState<Step>('team');\r\n    const [teamId, setTeamId] = useState<number | null>(null);\r\n    const { toast } = useToast();\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n        async function fetchGames() {\r\n            try {\r\n                const response = await fetch('/api/games');\r\n                if (!response.ok) throw new Error('Failed to fetch games');\r\n                const data = await response.json() as GamesResponse;\r\n                setGames(data.games);\r\n            } catch (error) {\r\n                console.error('Error fetching games:', error);\r\n                toast({\r\n                    variant: \"destructive\",\r\n                    title: \"Error\",\r\n                    description: \"Failed to load games\",\r\n                });\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        void fetchGames();\r\n    }, [toast]);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-8\">\r\n            <div className=\"mb-8\">\r\n                <h1 className=\"text-3xl font-bold tracking-tight\">New Booking</h1>\r\n                <p className=\"text-slate-400\">Create a new booking and team.</p>\r\n            </div>\r\n\r\n            {step === 'team' ? (\r\n                <TeamForm\r\n                    onSubmit={async (data) => {\r\n                        setSubmitting(true);\r\n                        try {\r\n                            const teamResponse = await fetch('/api/teams', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                },\r\n                                body: JSON.stringify(data),\r\n                            });\r\n\r\n                            if (!teamResponse.ok) {\r\n                                const errorData = await teamResponse.json() as ErrorResponse;\r\n                                throw new Error(errorData.error ?? 'Failed to create team');\r\n                            }\r\n\r\n                            const teamResult = await teamResponse.json() as TeamResponse;\r\n                            setTeamId(teamResult.team.id);\r\n                            setStep('booking');\r\n\r\n                            toast({\r\n                                title: \"Success\",\r\n                                description: \"Team created successfully\",\r\n                            });\r\n                        } catch (error) {\r\n                            console.error('Error creating team:', error);\r\n                            toast({\r\n                                variant: \"destructive\",\r\n                                title: \"Error\",\r\n                                description: error instanceof Error ? error.message : \"Failed to create team\",\r\n                            });\r\n                        } finally {\r\n                            setSubmitting(false);\r\n                        }\r\n                    }}\r\n                    submitLabel=\"Create Team & Continue\"\r\n                    isSubmitting={submitting}\r\n                />\r\n            ) : (\r\n                <form\r\n                    onSubmit={async (e) => {\r\n                        e.preventDefault();\r\n                        setSubmitting(true);\r\n\r\n                        try {\r\n                            const formData = new FormData(e.currentTarget);\r\n                            const gameId = formData.get('gameId') as string | null;\r\n                            const startTime = formData.get('startTime') as string | null;\r\n                            const expiresAt = formData.get('expiresAt') as string | null;\r\n                            const voucher = formData.get('voucher') as string | null;\r\n                            const notes = formData.get('notes') as string | null;\r\n                            const paid = formData.get('paid') as string | null;\r\n\r\n                            if (!gameId || !teamId) {\r\n                                throw new Error('Missing required fields');\r\n                            }\r\n\r\n                            const bookingResponse = await fetch('/api/bookings', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json',\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    teamId,\r\n                                    gameId: Number(gameId),\r\n                                    startTime: startTime ?? null,\r\n                                    expiresAt: expiresAt ?? null,\r\n                                    voucher: voucher ?? null,\r\n                                    paid: paid === 'on',\r\n                                    notes: notes ?? null,\r\n                                }),\r\n                            });\r\n\r\n                            if (!bookingResponse.ok) {\r\n                                const errorData = await bookingResponse.json() as ErrorResponse;\r\n                                throw new Error(errorData.error ?? 'Failed to create booking');\r\n                            }\r\n\r\n                            const bookingData = await bookingResponse.json() as BookingResponse;\r\n\r\n                            toast({\r\n                                title: \"Success\",\r\n                                description: `Booking created! Code: ${bookingData.booking.code}`,\r\n                            });\r\n\r\n                            router.push('/admin/bookings');\r\n                        } catch (error) {\r\n                            console.error('Error creating booking:', error);\r\n                            toast({\r\n                                variant: \"destructive\",\r\n                                title: \"Error\",\r\n                                description: error instanceof Error ? error.message : \"Failed to create booking\",\r\n                            });\r\n                        } finally {\r\n                            setSubmitting(false);\r\n                        }\r\n                    }}\r\n                    className=\"space-y-8\"\r\n                >\r\n                    <Card className=\"border-slate-800 bg-slate-900/50\">\r\n                        <CardHeader>\r\n                            <CardTitle>Booking Details</CardTitle>\r\n                        </CardHeader>\r\n                        <CardContent className=\"space-y-6\">\r\n                            <div className=\"space-y-2\">\r\n                                <Label htmlFor=\"gameId\">Game</Label>\r\n                                <select\r\n                                    id=\"gameId\"\r\n                                    name=\"gameId\"\r\n                                    required\r\n                                    className=\"w-full rounded-md border border-slate-800 bg-slate-950 px-3 py-2\"\r\n                                >\r\n                                    <option value=\"\">Select a game</option>\r\n                                    {games.map((game) => (\r\n                                        <option key={game.id} value={game.id}>\r\n                                            {game.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"space-y-2\">\r\n                                <Label htmlFor=\"startTime\">Start Time</Label>\r\n                                <Input\r\n                                    id=\"startTime\"\r\n                                    name=\"startTime\"\r\n                                    type=\"datetime-local\"\r\n                                    className=\"bg-slate-950\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"space-y-2\">\r\n                                <Label htmlFor=\"expiresAt\">Expires At</Label>\r\n                                <Input\r\n                                    id=\"expiresAt\"\r\n                                    name=\"expiresAt\"\r\n                                    type=\"datetime-local\"\r\n                                    className=\"bg-slate-950\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"space-y-2\">\r\n                                <Label htmlFor=\"voucher\">Voucher Code</Label>\r\n                                <Input\r\n                                    id=\"voucher\"\r\n                                    name=\"voucher\"\r\n                                    className=\"bg-slate-950\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <Checkbox\r\n                                    id=\"paid\"\r\n                                    name=\"paid\"\r\n                                />\r\n                                <Label\r\n                                    htmlFor=\"paid\"\r\n                                    className=\"font-normal\"\r\n                                >\r\n                                    Paid\r\n                                </Label>\r\n                            </div>\r\n\r\n                            <div className=\"space-y-2\">\r\n                                <Label htmlFor=\"notes\">Notes</Label>\r\n                                <Textarea\r\n                                    id=\"notes\"\r\n                                    name=\"notes\"\r\n                                    className=\"bg-slate-950\"\r\n                                />\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <div className=\"flex justify-end gap-4\">\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant=\"outline\"\r\n                            onClick={() => setStep('team')}\r\n                        >\r\n                            Back to Team\r\n                        </Button>\r\n                        <Button type=\"submit\" disabled={submitting}>\r\n                            {submitting ? \"Creating...\" : \"Create Booking\"}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1151, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0]}},
    {"offset": {"line": 1152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1158, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/node_modules/%40radix-ui/react-label/src/Label.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ElementRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = React.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        // only prevent text selection if clicking inside the label itself\n        const target = event.target as HTMLElement;\n        if (target.closest('button, input, select, textarea')) return;\n\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n"],"names":[],"mappings":";;;;;AAAA,YAAY,WAAW;AAenB;AAdJ,SAAS,iBAAiB;;;;;AAM1B,IAAM,OAAO;AAMb,IAAM,QAAc,8JAAA,UAAA,CAAqC,CAAC,OAAO,iBAAiB;IAChF,OACE,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,2KAAC,YAAA,CAAU,KAAA,EAAV;QACE,GAAG,KAAA;QACJ,KAAK;QACL,aAAa,CAAC,UAAU;YAEtB,MAAM,SAAS,MAAM,MAAA;YACrB,IAAI,OAAO,OAAA,CAAQ,iCAAiC,EAAG,CAAA;YAEvD,MAAM,WAAA,GAAc,KAAK;YAEzB,IAAI,CAAC,MAAM,gBAAA,IAAoB,MAAM,MAAA,GAAS,EAAG,CAAA,MAAM,cAAA,CAAe;QACxE;IAAA;AAGN,CAAC;AAED,MAAM,WAAA,GAAc;AAIpB,IAAM,OAAO","ignoreList":[0]}},
    {"offset": {"line": 1187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}