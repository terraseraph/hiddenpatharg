{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"~/lib/utils\";\r\n\r\nconst Card = React.forwardRef<\r\n    HTMLDivElement,\r\n    React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n    <div\r\n        ref={ref}\r\n        className={cn(\r\n            \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n            className\r\n        )}\r\n        {...props}\r\n    />\r\n));\r\nCard.displayName = \"Card\";\r\n\r\nconst CardHeader = React.forwardRef<\r\n    HTMLDivElement,\r\n    React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n    <div\r\n        ref={ref}\r\n        className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n        {...props}\r\n    />\r\n));\r\nCardHeader.displayName = \"CardHeader\";\r\n\r\nconst CardTitle = React.forwardRef<\r\n    HTMLParagraphElement,\r\n    React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n    <h3\r\n        ref={ref}\r\n        className={cn(\r\n            \"text-2xl font-semibold leading-none tracking-tight\",\r\n            className\r\n        )}\r\n        {...props}\r\n    />\r\n));\r\nCardTitle.displayName = \"CardTitle\";\r\n\r\nconst CardDescription = React.forwardRef<\r\n    HTMLParagraphElement,\r\n    React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n    <p\r\n        ref={ref}\r\n        className={cn(\"text-sm text-muted-foreground\", className)}\r\n        {...props}\r\n    />\r\n));\r\nCardDescription.displayName = \"CardDescription\";\r\n\r\nconst CardContent = React.forwardRef<\r\n    HTMLDivElement,\r\n    React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n    <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n));\r\nCardContent.displayName = \"CardContent\";\r\n\r\nconst CardFooter = React.forwardRef<\r\n    HTMLDivElement,\r\n    React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n    <div\r\n        ref={ref}\r\n        className={cn(\"flex items-center p-6 pt-0\", className)}\r\n        {...props}\r\n    />\r\n));\r\nCardFooter.displayName = \"CardFooter\";\r\n\r\nexport {\r\n    Card,\r\n    CardHeader,\r\n    CardFooter,\r\n    CardTitle,\r\n    CardDescription,\r\n    CardContent,\r\n}; "],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACR,4DACA;QAEH,GAAG,KAAK;;;;;;;AAGjB,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGjB,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACR,sDACA;QAEH,GAAG,KAAK;;;;;;;AAGjB,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGjB,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAElE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,6LAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGjB,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,8JAAM,UAAU,MAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,qKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"~/lib/utils\"\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.TextareaHTMLAttributes<HTMLTextAreaElement>>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-slate-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-slate-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-slate-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-slate-800 dark:bg-slate-950 dark:ring-offset-slate-950 dark:placeholder:text-slate-400 dark:focus-visible:ring-slate-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,8JAAM,UAAU,MAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qaACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/src/app/admin/teams/%5BteamId%5D/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { notFound, useRouter } from \"next/navigation\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"~/components/ui/card\";\r\nimport { Button } from \"~/components/ui/button\";\r\nimport { Input } from \"~/components/ui/input\";\r\nimport { Label } from \"~/components/ui/label\";\r\nimport { Textarea } from \"~/components/ui/textarea\";\r\nimport { useToast } from \"~/hooks/use-toast\";\r\n\r\ninterface Props {\r\n    params: {\r\n        teamId: string;\r\n    };\r\n}\r\n\r\ninterface Player {\r\n    id: number;\r\n    name: string;\r\n    email: string;\r\n    phone: string | null;\r\n    isTeamLeader: boolean;\r\n    details: string | null;\r\n}\r\n\r\ninterface Game {\r\n    id: number;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\ninterface GameInstance {\r\n    id: number;\r\n    startedAt: string;\r\n    completedAt: string | null;\r\n    currentPuzzleOrder: number;\r\n}\r\n\r\ninterface Booking {\r\n    id: number;\r\n    code: string;\r\n    createdAt: string;\r\n    expiresAt: string | null;\r\n    game: {\r\n        id: number;\r\n        name: string;\r\n    };\r\n    instance: GameInstance | null;\r\n}\r\n\r\ninterface Team {\r\n    id: number;\r\n    name: string;\r\n    players: Player[];\r\n    bookings: Booking[];\r\n}\r\n\r\ntype TeamResponse = {\r\n    team: Team;\r\n};\r\n\r\ntype GameResponse = {\r\n    games: Game[];\r\n};\r\n\r\ntype BookingResponse = {\r\n    booking: Booking;\r\n};\r\n\r\nfunction EditTeamPageContent({ teamId }: { teamId: number }) {\r\n    const [team, setTeam] = useState<Team | null>(null);\r\n    const [games, setGames] = useState<Game[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const { toast } = useToast();\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n        if (isNaN(teamId)) {\r\n            notFound();\r\n            return;\r\n        }\r\n\r\n        async function fetchData() {\r\n            try {\r\n                const [teamResponse, gamesResponse] = await Promise.all([\r\n                    fetch(`/api/teams/${teamId}`),\r\n                    fetch('/api/games')\r\n                ]);\r\n\r\n                if (!teamResponse.ok) throw new Error('Failed to fetch team');\r\n                if (!gamesResponse.ok) throw new Error('Failed to fetch games');\r\n\r\n                const teamData = await teamResponse.json() as TeamResponse;\r\n                const gamesData = await gamesResponse.json() as GameResponse;\r\n\r\n                setTeam(teamData.team);\r\n                setGames(gamesData.games);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n                notFound();\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        void fetchData();\r\n    }, [teamId]);\r\n\r\n    async function createBooking(gameId: number) {\r\n        setSubmitting(true);\r\n        try {\r\n            const response = await fetch('/api/bookings', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    teamId,\r\n                    gameId,\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to create booking');\r\n            }\r\n\r\n            const data = (await response.json()) as BookingResponse;\r\n            toast({\r\n                title: \"Success\",\r\n                description: `Booking created! Code: ${data.booking.code}`,\r\n            });\r\n\r\n            // Refresh the page data\r\n            const teamResponse = await fetch(`/api/teams/${teamId}`);\r\n            if (!teamResponse.ok) throw new Error('Failed to fetch updated team data');\r\n            const teamData = (await teamResponse.json()) as TeamResponse;\r\n            setTeam(teamData.team);\r\n        } catch (error) {\r\n            console.error('Error creating booking:', error);\r\n            toast({\r\n                variant: \"destructive\",\r\n                title: \"Error\",\r\n                description: \"Failed to create booking\",\r\n            });\r\n        } finally {\r\n            setSubmitting(false);\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return <div>Loading team...</div>;\r\n    }\r\n\r\n    if (!team) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-8\">\r\n            <div className=\"mb-8\">\r\n                <h1 className=\"text-3xl font-bold tracking-tight\">Edit Team</h1>\r\n                <p className=\"text-slate-400\">Update team details and manage players.</p>\r\n            </div>\r\n\r\n            <Card className=\"border-slate-800 bg-slate-900/50\">\r\n                <CardHeader>\r\n                    <CardTitle>Team Details</CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <form action=\"/api/teams/update\" method=\"POST\" className=\"space-y-6\">\r\n                        <input type=\"hidden\" name=\"teamId\" value={team.id} />\r\n\r\n                        <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"teamName\">Team Name</Label>\r\n                            <Input\r\n                                id=\"teamName\"\r\n                                name=\"teamName\"\r\n                                defaultValue={team.name}\r\n                                required\r\n                                className=\"bg-slate-950\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"space-y-2\">\r\n                            <Label htmlFor=\"players\">\r\n                                Players\r\n                                <span className=\"ml-1 text-sm text-slate-400\">\r\n                                    (one per line: name, email, phone)\r\n                                </span>\r\n                            </Label>\r\n                            <Textarea\r\n                                id=\"players\"\r\n                                name=\"players\"\r\n                                defaultValue={team.players.map(player =>\r\n                                    `${player.name}, ${player.email}${player.phone ? `, ${player.phone}` : ''}`\r\n                                ).join(\"\\n\")}\r\n                                required\r\n                                className=\"min-h-[120px] bg-slate-950\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"flex justify-end gap-4\">\r\n                            <Button\r\n                                type=\"button\"\r\n                                variant=\"outline\"\r\n                                onClick={() => window.history.back()}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type=\"submit\">\r\n                                Save Changes\r\n                            </Button>\r\n                        </div>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Card className=\"border-slate-800 bg-slate-900/50\">\r\n                <CardHeader>\r\n                    <CardTitle>Game Bookings</CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <div className=\"space-y-6\">\r\n                        <div>\r\n                            <h3 className=\"text-lg font-medium mb-4\">Current Bookings</h3>\r\n                            {team.bookings.length === 0 ? (\r\n                                <p className=\"text-slate-400\">No bookings yet.</p>\r\n                            ) : (\r\n                                <div className=\"space-y-4\">\r\n                                    {team.bookings.map((booking) => (\r\n                                        <div\r\n                                            key={booking.id}\r\n                                            className=\"flex items-center justify-between p-4 rounded-lg border border-slate-700 bg-slate-800/50\"\r\n                                        >\r\n                                            <div>\r\n                                                <h4 className=\"font-medium\">{booking.game.name}</h4>\r\n                                                <p className=\"text-sm text-slate-400\">Code: {booking.code}</p>\r\n                                                <p className=\"text-sm text-slate-400\">\r\n                                                    Created: {new Date(booking.createdAt).toLocaleDateString()}\r\n                                                </p>\r\n                                            </div>\r\n                                            {booking.instance ? (\r\n                                                <span className=\"text-sm text-green-400\">Game Started</span>\r\n                                            ) : (\r\n                                                <span className=\"text-sm text-yellow-400\">Not Started</span>\r\n                                            )}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <h3 className=\"text-lg font-medium mb-4\">Create New Booking</h3>\r\n                            <div className=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-3\">\r\n                                {games.map((game) => (\r\n                                    <div\r\n                                        key={game.id}\r\n                                        className=\"p-4 rounded-lg border border-slate-700 bg-slate-800/50\"\r\n                                    >\r\n                                        <h4 className=\"font-medium mb-2\">{game.name}</h4>\r\n                                        <p className=\"text-sm text-slate-400 mb-4\">{game.description}</p>\r\n                                        <Button\r\n                                            onClick={() => createBooking(game.id)}\r\n                                            disabled={submitting}\r\n                                            className=\"w-full\"\r\n                                        >\r\n                                            {submitting ? \"Creating...\" : \"Create Booking\"}\r\n                                        </Button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function EditTeamPage({ params }: Props) {\r\n    const teamId = parseInt(params.teamId);\r\n    if (isNaN(teamId)) {\r\n        notFound();\r\n    }\r\n    return <EditTeamPageContent teamId={teamId} />;\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 787, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 797, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0]}},
    {"offset": {"line": 798, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 804, "column": 0}, "map": {"version":3,"sources":["file://G%3A/_dev/hidden_path/arg-game/node_modules/%40radix-ui/react-label/src/Label.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ElementRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = React.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        // only prevent text selection if clicking inside the label itself\n        const target = event.target as HTMLElement;\n        if (target.closest('button, input, select, textarea')) return;\n\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n"],"names":[],"mappings":";;;;;AAAA,YAAY,WAAW;AAenB;AAdJ,SAAS,iBAAiB;;;;;AAM1B,IAAM,OAAO;AAMb,IAAM,QAAc,8JAAA,UAAA,CAAqC,CAAC,OAAO,iBAAiB;IAChF,OACE,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,2KAAC,YAAA,CAAU,KAAA,EAAV;QACE,GAAG,KAAA;QACJ,KAAK;QACL,aAAa,CAAC,UAAU;YAEtB,MAAM,SAAS,MAAM,MAAA;YACrB,IAAI,OAAO,OAAA,CAAQ,iCAAiC,EAAG,CAAA;YAEvD,MAAM,WAAA,GAAc,KAAK;YAEzB,IAAI,CAAC,MAAM,gBAAA,IAAoB,MAAM,MAAA,GAAS,EAAG,CAAA,MAAM,cAAA,CAAe;QACxE;IAAA;AAGN,CAAC;AAED,MAAM,WAAA,GAAc;AAIpB,IAAM,OAAO","ignoreList":[0]}},
    {"offset": {"line": 833, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}